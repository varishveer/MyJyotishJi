@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "JyotishLayout";
}
<link href="https://cdn.datatables.net/2.1.3/css/dataTables.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/2.1.3/js/dataTables.min.js"></script>
<div class="container-fluid pt-4 px-4">
    <div class="bg-light text-center rounded p-4">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <h6 class="mb-0">Team Members</h6>

        </div>
        <div class="container mt-5">
            <h2>Team Members</h2>
            <table id="teamMemberTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">Mobile</th>
                        <th scope="col">Email</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be dynamically inserted here -->
                </tbody>
            </table>
        </div>

    </div>
</div>




  <script>
    $(document).ready(function () {
        var email = localStorage.getItem('userEmail'); // Get the JyotishEmail from localStorage
        debugger;
        // Initialize the DataTable
        var table = $('#teamMemberTable').DataTable({
            ajax: {
                url: `https://localhost:7118/api/Jyotish/TeamMember?JyotishEmail=${encodeURIComponent(email)}`, // API endpoint to fetch data
                type: 'GET',
                headers: {
                    'Authorization': `Bearer ${localStorage.getItem("Token2")}`, // Example of an authorization header
                    'Content-Type': 'application/json', // Example of a content type header

                },
                // Send the JyotishEmail parameter
                dataSrc: '' // Assuming the API returns a JSON array directly
            },
            columns: [
                { data: 'id' },
                { data: 'name' },
                { data: 'mobile' },
                { data: 'email' },
                {
                    data: null, // This column is for the Action buttons
                    render: function (data, type, row) {
                        return '<button class="btn btn-primary">View</button>';
                        // Add other action buttons as needed
                    }
                }
            ]
        }); 
    });

  </script>