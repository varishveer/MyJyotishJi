@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "Extra";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/MyJyotishJiWebDesign.styles.css" asp-append-version="true" />
<style>
    body {
        background-color: #f8f9fa;
        font-family: Arial, sans-serif;
    }

    .outerDiv {
        padding: 20px;
        max-width: 800px;
        margin: auto;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .profile-form {
        margin-top: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

    .form-control, .form-control select {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

        .form-control[type="file"] {
            border: none;
        }

    .form-group img {
        margin-top: 10px;
        max-width: 150px;
        border-radius: 50%;
    }

    .checkbox-group label {
        display: block;
        margin-bottom: 5px;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        font-size: 16px;
        padding: 10px;
        text-align: center;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .policy-text {
        margin-top: 10px;
        font-size: 14px;
        color: #777;
        text-align: center;
    }

        .policy-text a {
            color: #007bff;
            text-decoration: none;
        }

            .policy-text a:hover {
                text-decoration: underline;
            }
</style>
<div class="outerDiv">
    <h1 class="text-center mb-4">Profile Form</h1>
    <form id="registrationForm" class="Registration-form">
        <div class="form-group">
            <label for="profile-picture">Profile Picture:</label>
            <input type="file" id="profile-picture" name="profile-picture" class="form-control">
            <img src="profile-pic-placeholder.png" alt="Profile Picture" id="profile-picture-preview">
        </div>

        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" value="My Jyotish" class="form-control">
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" value="email@gmail.com" class="form-control">
        </div>

        <div class="form-group">
            <label for="phone">Phone Number:</label>
            <input type="tel" id="phone" name="phone" value="7985738573" class="form-control">
        </div>

        <div class="form-group">
            <label for="gender">Gender:</label>
            <select id="gender" name="gender" class="form-control">
                <option value="Male" selected>Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div class="form-group">
            <label>Languages:</label>
            <div class="checkbox-group">
                <label><input type="checkbox" name="languages" value="Hindi" checked> Hindi</label>
                <label><input type="checkbox" name="languages" value="English" checked> English</label>
                <label><input type="checkbox" name="languages" value="Spanish"> Spanish</label>
                <label><input type="checkbox" name="languages" value="French"> French</label>
            </div>
        </div>

        <div class="form-group">
            <label>Expertise:</label>
            <div class="checkbox-group">
                <label><input type="checkbox"checked> Horoscope</label>
                <label><input type="checkbox"checked> Vastu</label>
                <label><input type="checkbox" > Tarot</label>
                <label><input type="checkbox"> Face Reading</label>
            </div>
        </div>
        <div class="form-group">
            <label for="experience">Professional Experience:</label>
            <input type="text" id="experience" name="experience" value="5 Year" class="form-control">
        </div>
        <div class="form-group">
            <label for="country">Country:</label>
            <select id="country" name="country" class="form-control">
                <option value="">Select Country</option>
            </select>
        </div>

        <div class="form-group">
            <label for="state">State:</label>
            <select id="state" name="state" class="form-control" disabled>
                <option value="">Select State</option>
            </select>
        </div>

        <div class="form-group">
            <label for="city">City:</label>
            <select id="city" name="city" class="form-control" disabled>
                <option value="">Select City</option>
            </select>
        </div>
        <div class="form-group">
            <label for="address">Address:</label>
            <input type="text" id="address" name="address"  class="form-control">
        </div>

        <div class="form-group">
            <label for="dob">Date of Birth:</label>
            <input type="date" id="dob" name="dob" value="1995-10-19" class="form-control">
        </div>

        <div class="text-center">
            <a href="/Jyotish/Login" class="btn btn-success">
                Submit
            </a>
        </div>
    </form>

    <div class="policy-text">
        <p>By submitting this form, you agree to our <a href="#">Privacy Policy</a> and <a href="#">Terms of Service</a>.</p>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>

<script>
    async function loadCountries() {
        try {
            const response = await fetch('https://countriesnow.space/api/v0.1/countries');
            const data = await response.json();

            const countryDropdown = document.getElementById('country');
            countryDropdown.innerHTML = '<option value="">Select Country</option>';

            data.data.forEach(country => {
                countryDropdown.innerHTML += `<option value="${country.country_code}">${country.name}</option>`;
            });
        } catch (error) {
            console.error('Error fetching countries:', error);
        }
    }

    // Load states based on selected country
    async function loadStates(countryCode) {
        try {
            const response = await fetch(`https://countriesnow.space/api/v0.1/countries/states`);
            const data = await response.json();
            const stateDropdown = document.getElementById('state');
            stateDropdown.innerHTML = '<option value="">Select State</option>';
            const states = data.data[countryCode] || [];
            states.forEach(state => {
                stateDropdown.innerHTML += `<option value="${state.state_code}">${state.name}</option>`;
            });
            stateDropdown.disabled = false;
        } catch (error) {
            console.error('Error fetching states:', error);
        }
    }

    // Load cities based on selected state
    async function loadCities(stateCode) {
        try {
            const response = await fetch(`https://countriesnow.space/api/v0.1/countries/cities`);
            const data = await response.json();
            const cityDropdown = document.getElementById('city');
            cityDropdown.innerHTML = '<option value="">Select City</option>';
            const cities = data.data[stateCode] || [];
            cities.forEach(city => {
                cityDropdown.innerHTML += `<option value="${city}">${city}</option>`;
            });
            cityDropdown.disabled = false;
        } catch (error) {
            console.error('Error fetching cities:', error);
        }
    }

    // Event listeners
    document.getElementById('country').addEventListener('change', function () {
        const countryCode = this.value;
        if (countryCode) {
            loadStates(countryCode);
        }
    });

    document.getElementById('state').addEventListener('change', function () {
        const stateCode = this.value;
        if (stateCode) {
            loadCities(stateCode);
        }
    });

    document.addEventListener('DOMContentLoaded', loadCountries);
</script>

<script>
    document.getElementById('registrationForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent the default form submission

        const form = event.target;
        const formData = new FormData(form); // Collect form data including file inputs

        // Send the form data to the server
        fetch('https://localhost:7118/Api/Account/login', { // Replace with your API endpoint
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
                alert('Form submitted successfully!');
                // Optionally, reset the form or redirect to another page
                form.reset();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('There was an error submitting the form.');
            });
    });
</script>