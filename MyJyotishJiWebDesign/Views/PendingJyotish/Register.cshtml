@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "Extra";
}



<style>
   

    .outerDiv {
        padding: 20px;
        max-width: 800px;
        margin: auto;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    }

    .profile-form {
        margin-top: 20px;
    }

    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

    .form-control, .form-control select {
        width: 100%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

        .form-control[type="file"] {
            border: none;
        }

    .form-group img {
        margin-top: 10px;
        max-width: 150px;
        border-radius: 50%;
    }

    .checkbox-group label {
        display: block;
        margin-bottom: 5px;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
        font-size: 16px;
        padding: 10px;
        text-align: center;
    }

        .btn-success:hover {
            background-color: #218838;
            border-color: #1e7e34;
        }

    .policy-text {
        margin-top: 10px;
        font-size: 14px;
        color: #777;
        text-align: center;
    }

        .policy-text a {
            color: #007bff;
            text-decoration: none;
        }

            .policy-text a:hover {
                text-decoration: underline;
            }
</style>
<div class="outerDiv col-md-6">
    <h1 class="text-center mb-4">Registration Form</h1>
    <form id="registrationForm" enctype="multipart/form-data">
        <div class="form-group">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name" class="form-control">
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" class="form-control">
        </div>

        <div class="form-group">
            <label for="mobile">Phone Number:</label>
            <input type="text" id="mobile" name="mobile" class="form-control">
        </div>

        <div class="form-group">
            <label for="gender">Gender:</label>
            <select id="gender" name="gender" class="form-control">
                <option value="Male" selected>Male</option>
                <option value="Female">Female</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div class="form-group">
            <label for="language">Language:</label>
            <select id="language" name="language" class="form-control">
                <option value="Hindi" selected>Hindi</option>
                <option value="English">English</option>
                <option value="Other">Other</option>
            </select>
        </div>

        <div class="form-group">
            <label for="expertise">Expertise:</label>
            <select id="expertise" name="expertise" class="form-control">
                <option value="">Select Expertise</option>
            </select>
        </div>

        <div class="form-group">
            <label for="country">Country:</label>
            <select id="country" name="country" class="form-control">
                <option value="">Select Country</option>
            </select>
        </div>

        <div class="form-group">
            <label for="state">State:</label>
            <select id="state" name="state" class="form-control" disabled>
                <option value="">Select State</option>
            </select>
        </div>

        <div class="form-group">
            <label for="city">City:</label>
            <select id="city" name="city" class="form-control" disabled>
                <option value="">Select City</option>
            </select>
        </div>

        <div class="text-center">
            <button type="submit" class="btn btn-success">
                Submit
            </button>
        </div>
    </form>

    <div class="policy-text">
        <p>By submitting this form, you agree to our <a href="#">Privacy Policy</a> and <a href="#">Terms of Service</a>.</p>
    </div>
    <div class="d-flex justify-content-center"><p>Already Have an Account!</p></div>
    
    <div class="d-flex justify-content-center">
       
        <a href="/PendingJyotish/Login" class="btn btn-info">Login</a>
    </div>
</div>





<script>
    $(document).ready(function () {
        const $countryDropdown = $('#country');
        const $stateDropdown = $('#state');
        const $cityDropdown = $('#city');

        async function loadExpertise() {
            try {
                const response = await fetch('https://localhost:7118/Api/Jyotish/Expertise');
                const data = await response.json();
                const $expertiseDropdown = $('#expertise');
                $expertiseDropdown.html('<option value="">Select Expertise</option>');

                data.data.forEach(expertise => {
                    $expertiseDropdown.append(`<option value="${expertise.name}">${expertise.name}</option>`);
                });
            } catch (error) {
                console.error('Error fetching expertise:', error);
            }
        }

        async function loadCountries() {
            try {
                const response = await fetch('https://localhost:7118/Api/Jyotish/Country');
                const data = await response.json();
                $countryDropdown.html('<option value="">Select Country</option>');

                data.data.forEach(country => {
                    $countryDropdown.append(`<option value="${country.id}" data-countryName="${country.name}">${country.name}</option>`);
                });
            } catch (error) {
                console.error('Error fetching countries:', error);
            }
        }

        async function loadStates(countryId) {
            try {
                const response = await fetch(`https://localhost:7118/Api/Jyotish/State?Id=${countryId}`);
                const data = await response.json();
                $stateDropdown.html('<option value="">Select State</option>');

                data.data.forEach(state => {
                    $stateDropdown.append(`<option value="${state.id}">${state.name}</option>`);
                });

                $stateDropdown.prop('disabled', false);
            } catch (error) {
                console.error('Error fetching states:', error);
            }
        }

        async function loadCities(stateId) {
            try {
                const response = await fetch(`https://localhost:7118/Api/Jyotish/City?Id=${stateId}`);
                const data = await response.json();
                $cityDropdown.html('<option value="">Select City</option>');

                data.data.forEach(city => {
                    $cityDropdown.append(`<option value="${city.id}" data-name="${city.name}">${city.name}</option>`);
                });

                $cityDropdown.prop('disabled', false);
            } catch (error) {
                console.error('Error fetching cities:', error);
            }
        }

        loadExpertise();
        loadCountries();

        $countryDropdown.change(function () {
            const countryId = $(this).val();
            if (countryId) {
                loadStates(countryId);
            } else {
                $stateDropdown.html('<option value="">Select State</option>').prop('disabled', true);
                $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $stateDropdown.change(function () {
            const stateId = $(this).val();
            if (stateId) {
                loadCities(stateId);
            } else {
                $cityDropdown.html('<option value="">Select City</option>').prop('disabled', true);
            }
        });

        $('#registrationForm').on("submit",function (event) {
            event.preventDefault();
            debugger
            const formData = $(this).serialize();

            $.ajax({
                url: 'https://localhost:7118/Api/Account/registerJyotish',
                type: 'POST',
                data: formData,
                success: function (response) {
                    console.log('Success:', response);
                    // localStorage.setItem('PendingEmail', document.getElementById('email'));
                    alert('Form submitted successfully!');
                    $('#registrationForm')[0].reset(); // Reset the form
                },
                error: function (xhr, status, error) {
                    debugger
                    console.error('Error:', error);
                    console.log('XHR:', xhr.statusCode);
                    alert('There was an error submitting the form.');
                }
            });
        });
    });
</script>
